image:
  name: hashicorp/terraform:1.6.0
  entrypoint: [""]

stages:
  - remote-backend
  - cloning
  - creation
  - destroying

.rules_block: &rules_block
  rules:
    - if: '$CI_COMMIT_BRANCH == "dev"'
      variables:
        CI_ENVIRONMENT_NAME: "dev"
    - if: '$CI_COMMIT_BRANCH == "staging"'
      variables:
        CI_ENVIRONMENT_NAME: "staging"
    - if: '$CI_COMMIT_BRANCH == "main"'
      variables:
        CI_ENVIRONMENT_NAME: "prd"
    - when: never

variables:
  TF_ROOT: "env/$CI_ENVIRONMENT_NAME"

remote-backend:
  stage: remote-backend
  before_script: []
  script:
    - git clone https://github.com/Yogesh07garg/terraform-multi-environment.git
    - cd terraform-multi-environment/backend
    - terraform init -reconfigure
    - terraform plan
    - terraform apply -auto-approve
  when: manual
  

clone_job:
  stage: cloning
  script:
    - |
      if [ ! -d "terraform-multi-environment" ]; then
        echo "Cloning repo..."
        git clone https://github.com/Yogesh07garg/terraform-multi-environment.git
      else
        echo "Repo already exists. Skipping clone."
      fi
  artifacts:
    paths:
      - terraform-multi-environment/
    expire_in: 1 hour
  <<: *rules_block

creation_job:
  stage: creation
  dependencies:
    - clone_job
  before_script:
    - cd terraform-multi-environment/$TF_ROOT
  script:
    - echo "$TF_PUBLIC_KEY" > terraform-key.pub
    - terraform init -reconfigure
    - terraform validate
    - terraform plan -out=tfplan
    - terraform apply -auto-approve tfplan
  artifacts:
    paths:
      - terraform-multi-environment/$TF_ROOT/.terraform/
      - terraform-multi-environment/$TF_ROOT/.terraform.lock.hcl
    expire_in: 1 hour
  <<: *rules_block
  environment:
    name: $CI_ENVIRONMENT_NAME

destroy_job:
  stage: destroying
  before_script:
    - |
      if [ ! -d "terraform-multi-environment" ]; then
        git clone https://github.com/Yogesh07garg/terraform-multi-environment.git
      fi
    
    - cd terraform-multi-environment/$TF_ROOT
  script:
    - echo "$TF_PUBLIC_KEY" > terraform-key.pub
    - terraform init -reconfigure
    - terraform destroy -auto-approve
  when: manual
  <<: *rules_block

